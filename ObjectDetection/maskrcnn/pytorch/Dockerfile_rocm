# Copyright (c) 2018, NVIDIA CORPORATION. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#ARG FROM_IMAGE_NAME=compute-artifactory.amd.com:5000/rocm-plus-docker/framework/compute-rocm-rel-5.0:19_ubuntu18.04_py3.7_pytorch_rocm5.0_internal_testing_6003aca
#ARG FROM_IMAGE_NAME=compute-artifactory.amd.com:5000/rocm-plus-docker/framework/compute-rocm-rel-4.1:5_ubuntu18.04_py3.6_pytorch_rocm4.1_internal_testing_5ce11d0_10
#ARG FROM_IMAGE_NAME=rocm/pytorch:rocm5.1.1_ubuntu20.04_py3.7_pytorch_staging
#ARG FROM_IMAGE_NAME=rocm/pytorch:rocm5.1.3_ubuntu20.04_py3.7_pytorch_1.11.0
ARG FROM_IMAGE_NAME=rocm/pytorch:rocm5.3.2_ubuntu20.04_py3.7_pytorch_1.12.1

FROM ${FROM_IMAGE_NAME}

# Install dependencies for system configuration logger
RUN apt-get update \
 && apt-get install -y --no-install-recommends \
        infiniband-diags \
        pciutils numactl \
 && rm -rf /var/lib/apt/lists/*

WORKDIR /workspace/dwl
RUN pip install ninja
#apex is pre installed in release containers, uncomment below lines to install yourself
#RUN git clone --recursive https://github.com/ROCmSoftwarePlatform/apex \
# && cd apex \
# && python3 setup.py install --cuda_ext --cpp_ext

WORKDIR /workspace/dwl
RUN pip install pybind11 Cython
RUN pip install matplotlib==3.5.3
RUN git clone https://github.com/NVIDIA/cocoapi \
 && cd cocoapi/PythonAPI \
# && conda install -y -c anaconda python=3.8 \
# && conda install -y -c anaconda cython \
# && conda install -y -c anaconda pytorch \
# && conda install -y -c anaconda cudatoolkit \
 && python3 setup.py build_ext install

#install torchvision: only required for 3.9rc2
WORKDIR /workspace/dwl
ENV FORCE_CUDA=1
#torchvision is pre installed in release containers, uncomment below lines to install yourself
#RUN git clone -b 'v0.9.1' --single-branch https://github.com/pytorch/vision \
# && cd vision \
# && python3 setup.py install 

# Install Python dependencies
WORKDIR /workspace/object_detection

COPY requirements.txt .
RUN pip install --no-cache-dir https://github.com/mlperf/logging/archive/9ea0afa.zip \
 && pip install --no-cache-dir -r requirements.txt

RUN pip install --no-cache-dir tqdm

# Copy detectron code and build
COPY . .
ENV FORCE_CUDA=1
ENV MASKRCNN_ROCM_BUILD=1
RUN python3 setup.py develop
#RUN pip install numpy==1.17.4
ENV OMP_NUM_THREADS=1
ENV OPENCV_FOR_THREADS_NUM=1

# RPD Tracer
RUN apt update -y \
  && apt-get install sqlite3 libsqlite3-dev -y \
  && apt install libsqlite3-dev -y \
  && apt-get install libfmt-dev -y \
  && cd rocmProfileData \
  && make \
  && make install \
  && rm -rf ../helpful_queries \
  && mv helpful_queries ../
